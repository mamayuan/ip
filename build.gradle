plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    String javaFxVersion = '17.0.7'

    // Add your JavaFX dependencies here
    implementation "org.openjfx:javafx-base:$javaFxVersion"
    implementation "org.openjfx:javafx-controls:$javaFxVersion"
    implementation "org.openjfx:javafx-fxml:$javaFxVersion"
    implementation "org.openjfx:javafx-graphics:$javaFxVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClassName = 'duke.ui.Launcher'
}

checkstyle {
    toolVersion = '10.2'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    manifest {
        attributes 'Main-Class': 'duke.ui.Launcher'
    }
    archiveBaseName.set('DaDaYuan')
    archiveClassifier.set('')
    include 'duke/**'
    include 'view/**'
    include 'images/**'
    mergeServiceFiles()
}

// Add dist tasks
task distZip(type: Zip) {
    from 'src/main/resources'
    into 'resources'
}

task distTar(type: Tar) {
    from 'src/main/resources'
    into 'resources'
}

// Make shadowJar task depend on dist tasks
shadowJar.dependsOn 'distZip', 'distTar'

// Include the JavaFX dependencies
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/lib'
}
build.finalizedBy(copyDependencies)
